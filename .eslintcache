[{"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\index.js":"1","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\reportWebVitals.js":"2","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\App\\App.js":"3","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\nav\\nav.js":"4","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\nav\\drawer.js":"5","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\get.js":"6","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\zipDecode\\zipDecode.js":"7","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\login\\login.js":"8","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\login\\styleLogin.js":"9","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\sendData.js":"10","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\notification\\notification.js":"11","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\list\\list.js":"12","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\getData.js":"13"},{"size":398,"mtime":1611678011508,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":116,"mtime":1611678327603,"results":"17","hashOfConfig":"15"},{"size":9595,"mtime":1611870239669,"results":"18","hashOfConfig":"15"},{"size":2452,"mtime":1611867386294,"results":"19","hashOfConfig":"15"},{"size":899,"mtime":1611853791130,"results":"20","hashOfConfig":"15"},{"size":6276,"mtime":1611881069077,"results":"21","hashOfConfig":"15"},{"size":12909,"mtime":1611881101830,"results":"22","hashOfConfig":"15"},{"size":1090,"mtime":1611862067025,"results":"23","hashOfConfig":"15"},{"size":567,"mtime":1611862930259,"results":"24","hashOfConfig":"15"},{"size":1752,"mtime":1611865321770,"results":"25","hashOfConfig":"15"},{"size":2843,"mtime":1611877451615,"results":"26","hashOfConfig":"15"},{"size":505,"mtime":1611868327635,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"yjj1u3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\index.js",[],["58","59"],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\App\\App.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\nav\\nav.js",["60","61"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DrawerNav from \"./drawer\";\r\nimport ZipDecode from \"../zipDecode/zipDecode\";\r\nimport Login from \"../login/login\";\r\nimport getData from \"../../until/get\";\r\nimport ListOrders from \"../list/list\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  rootInput: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Nav() {\r\n  const [open, setOpen] = React.useState(false),\r\n    [zip1, setZip1] = React.useState(\"\"),\r\n    [zip2, setZip2] = React.useState(\"\"),\r\n    [city, setCity] = React.useState(\"\"),\r\n    [city2, setCity2] = React.useState(\"\"),\r\n    [state, setState] = React.useState(\"\"),\r\n    [state2, setState2] = React.useState(\"\"),\r\n    [openZip2Text, setOpenZip2Text] = React.useState(false),\r\n    [openZipText, setOpenZipText] = React.useState(false),\r\n    [redirect, setRedirect] = React.useState(\"zipcode\");\r\n  const classes = useStyles();\r\n\r\n  const listEvent = (item) => {\r\n    setRedirect(item);\r\n  };\r\n\r\n  const onChangeZip1 = (e) => {\r\n    const onlyNums = e.target.value.replace(/[^0-9]/g, \"\");\r\n\r\n    setZip1(onlyNums);\r\n  };\r\n  const onChangeZip2 = (e) => {\r\n    const onlyNums = e.target.value.replace(/[^0-9]/g, \"\");\r\n\r\n    setZip2(onlyNums);\r\n  };\r\n  const handleChangedataCity = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n  const handleChangedataCity2 = (e) => {\r\n    setCity2(e.target.value);\r\n  };\r\n  const handleChangedataState = (e) => {\r\n    setState(e.target.value);\r\n  };\r\n  const handleChangedataState2 = (e) => {\r\n    setState2(e.target.value);\r\n  };\r\n  const ZipDecodeComponent = () => {\r\n    if (zip1.length === 0 || zip2.length === 0) {\r\n      return null;\r\n    } else {\r\n      return <ZipDecode zip1={zip1} zip2={zip2} />;\r\n    }\r\n  };\r\n  const getZipCodes = () => {\r\n    const url = `/city-zips.json/${city}/${state}`;\r\n    const url2 = `/city-zips.json/${city2}/${state2}`;\r\n    getData(url).then((response) => {\r\n      if (response.zip_codes.length !== 0) {\r\n        setZip1(response.zip_codes[0]);\r\n        setOpenZipText(true);\r\n      } else {\r\n        setZip1(\"no found city\");\r\n      }\r\n    });\r\n    getData(url2).then((response) => {\r\n      if (response.zip_codes.length !== 0) {\r\n        setZip2(response.zip_codes[0]);\r\n        setOpenZip2Text(true);\r\n      } else {\r\n        setZip2(\"no found city\");\r\n      }\r\n    });\r\n  };\r\n  const logOut = ()=>{\r\n    localStorage.removeItem('id')\r\n    localStorage.removeItem('user')\r\n    window.location.reload()\r\n  }\r\n  if (!localStorage.getItem(\"id\")) {\r\n    return <Login />;\r\n  } else {\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <DrawerNav item={listEvent} />\r\n            </IconButton>\r\n            <Typography letiant=\"h6\" className={classes.title}>\r\n              APP ZIPCODES\r\n            </Typography>\r\n            <Button color=\"inherit\" onClick={logOut}>Cerrar sesión</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"70vh\", marginTop: 8 }}\r\n        >\r\n          {redirect === \"zipcode\" ? (\r\n            <div>\r\n              <Grid item xs={12}>\r\n                <Grid container justify=\"center\">\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Código postal 1\"\r\n                      variant=\"outlined\"\r\n                      onChange={onChangeZip1}\r\n                      value={zip1}\r\n                      inputProps={{ maxLength: 15 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Código postal 1\"\r\n                      variant=\"outlined\"\r\n                      onChange={onChangeZip2}\r\n                      value={zip2}\r\n                      className={classes.rootInput}\r\n                      inputProps={{ maxLength: 15 }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n              >\r\n                <ZipDecodeComponent zip1={zip1} zip2={zip2} />\r\n              </Grid>\r\n            </div>\r\n          ) : redirect === \"bystate\" ? (\r\n            <div>\r\n              <Grid item xs={12}>\r\n                <Grid container justify=\"center\">\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={zip1 === \"no found city\"}\r\n                      helperText={\r\n                        zip1 === \"no found city\"\r\n                          ? \"ingresa una ciudad válida\"\r\n                          : null\r\n                      }\r\n                      id=\"outlined-basic\"\r\n                      label=\"Cuidad salida\"\r\n                      variant=\"outlined\"\r\n                      onChange={handleChangedataCity}\r\n                      value={city}\r\n                      inputProps={{ maxLength: 15 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={zip1 === \"no found city\"}\r\n                      helperText={\r\n                        zip1 === \"no found city\"\r\n                          ? \"ingresa un código de estado válido\"\r\n                          : null\r\n                      }\r\n                      id=\"outlined-basic\"\r\n                      label=\"Estado\"\r\n                      variant=\"outlined\"\r\n                      onChange={handleChangedataState}\r\n                      value={state}\r\n                      inputProps={{ maxLength: 15 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\">\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={zip2 === \"no found city\"}\r\n                      helperText={\r\n                        zip2 === \"no found city\"\r\n                          ? \"ingresa una ciudad válida\"\r\n                          : null\r\n                      }\r\n                      id=\"outlined-basic\"\r\n                      label=\"Cuidad Destino\"\r\n                      variant=\"outlined\"\r\n                      onChange={handleChangedataCity2}\r\n                      value={city2}\r\n                      inputProps={{ maxLength: 15 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      error={zip2 === \"no found city\"}\r\n                      helperText={\r\n                        zip2 === \"no found city\"\r\n                          ? \"ingresa un código de estado válido\"\r\n                          : null\r\n                      }\r\n                      id=\"outlined-basic\"\r\n                      label=\"Estado Destino\"\r\n                      variant=\"outlined\"\r\n                      onChange={handleChangedataState2}\r\n                      value={state2}\r\n                      inputProps={{ maxLength: 2 }}\r\n                      className={classes.rootInput}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Typography>\r\n                {zip1 && city && state && openZipText\r\n                  ? `Código postal de ${city}: ${zip1}`\r\n                  : null}\r\n              </Typography>\r\n              <Typography>\r\n                {zip2 && city2 && state2 && openZip2Text\r\n                  ? `Código postal de ${city2}: ${zip2}`\r\n                  : null}\r\n              </Typography>\r\n              {city && city2 && state && state2 ? (\r\n                <div style={{ marginBlock: 5 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={getZipCodes}\r\n                  >\r\n                    Consultar codigos postales\r\n                  </Button>\r\n                </div>\r\n              ) : null}\r\n              {zip1 && zip2 && city && city2 && state && state2 ? (\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                >\r\n                  <ZipDecodeComponent />\r\n                </Grid>\r\n              ) : null}\r\n            </div>\r\n          ) : redirect==='list'?(<ListOrders/>):null}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\nav\\drawer.js",["62"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AirportShuttleIcon from '@material-ui/icons/AirportShuttle';\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function DrawerNav(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n const handleChangeDrawOpen = () =>{\r\n     open?setOpen(false):setOpen(true)\r\n }\r\nconst listEvent = (item)=>{\r\n    props.item(item)\r\n}\r\n  const list = () => (\r\n    <div\r\n      className={clsx(classes.list)}\r\n      role=\"presentation\"\r\n    >\r\n      <List>\r\n        <ListItem>\r\n            <ListItemIcon>\r\n                <AirportShuttleIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n                Route\r\n            </ListItemText>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button onClick={()=>listEvent('zipcode')}> \r\n            <ListItemIcon>\r\n            <NotListedLocationIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n            Pedido por COP\r\n            </ListItemText>\r\n        </ListItem>\r\n<ListItem button onClick={()=>listEvent('bystate')}>\r\n    <ListItemIcon>\r\n<MonetizationOnIcon/>\r\n    </ListItemIcon>\r\n    <ListItemText>\r\n    Pedido por Ciudad\r\n    </ListItemText>\r\n</ListItem>\r\n<ListItem button onClick={()=>listEvent('list')}>\r\n    <ListItemIcon>\r\n    <MonetizationOnIcon/>\r\n    </ListItemIcon>\r\n    <ListItemText>\r\n    Lista de pedidos\r\n    </ListItemText>\r\n</ListItem>\r\n\r\n\r\n\r\n\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <MenuIcon onClick={handleChangeDrawOpen}/>\r\n        <Drawer \r\n        anchor='left'\r\n        open={open}\r\n        onClose={handleChangeDrawOpen}\r\n        \r\n        >\r\n            {list()}\r\n        </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\get.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\zipDecode\\zipDecode.js",["63"],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\login\\login.js",["64","65","66"],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\login\\styleLogin.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\sendData.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\notification\\notification.js",["67","68","69","70"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\nfunction GrowTransition(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\nexport default function Notification(props) {\r\n  const [state, setState] = React.useState({\r\n    open: true,\r\n    Transition: Fade,\r\n  });\r\n\r\n  const handleClick = (Transition) => () => {\r\n    setState({\r\n      open: true,\r\n      Transition,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  };\r\nif(props.status===\"Creado exitosamente\"){\r\n    return (\r\n        <div>\r\n    \r\n          <Snackbar\r\n            open={props.status}\r\n          \r\n            TransitionComponent={state.Transition}\r\n           \r\n            key={state.Transition.name}\r\n          >\r\n                 <Alert onClose={handleClose} severity=\"success\">\r\n              Generado ecitosamente\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      );\r\n}else if(props.status==='error servidor'){\r\n    return (\r\n        <div>\r\n          <Snackbar\r\n            open={props.status}\r\n      \r\n            TransitionComponent={state.Transition}\r\n           \r\n            key={state.Transition.name}\r\n          >\r\n                 <Alert severity=\"error\">Error</Alert>\r\n          </Snackbar>\r\n        </div>\r\n      );\r\n}else{\r\n    return null\r\n}\r\n\r\n}\r\n","C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\components\\list\\list.js",[],"C:\\Users\\Administrator\\Documents\\projectLeafletV1\\pleafletv1\\src\\until\\getData.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":34,"column":10,"nodeType":"77","messageId":"78","endLine":34,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":34,"column":16,"nodeType":"77","messageId":"78","endLine":34,"endColumn":23},{"ruleId":"75","severity":1,"message":"80","line":12,"column":8,"nodeType":"77","messageId":"78","endLine":12,"endColumn":16},{"ruleId":"75","severity":1,"message":"81","line":29,"column":9,"nodeType":"77","messageId":"78","endLine":29,"endColumn":16},{"ruleId":"75","severity":1,"message":"82","line":18,"column":7,"nodeType":"77","messageId":"78","endLine":18,"endColumn":14},{"ruleId":"75","severity":1,"message":"83","line":30,"column":10,"nodeType":"77","messageId":"78","endLine":30,"endColumn":15},{"ruleId":"75","severity":1,"message":"84","line":51,"column":9,"nodeType":"77","messageId":"78","endLine":51,"endColumn":19},{"ruleId":"75","severity":1,"message":"85","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"86","line":8,"column":10,"nodeType":"77","messageId":"78","endLine":8,"endColumn":25},{"ruleId":"75","severity":1,"message":"87","line":14,"column":10,"nodeType":"77","messageId":"78","endLine":14,"endColumn":24},{"ruleId":"75","severity":1,"message":"88","line":24,"column":9,"nodeType":"77","messageId":"78","endLine":24,"endColumn":20},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'open' is assigned a value but never used.","Identifier","unusedVar","'setOpen' is assigned a value but never used.","'MailIcon' is defined but never used.","'classes' is assigned a value but never used.","'options' is assigned a value but never used.","'Alert' is defined but never used.","'fullScreen' is assigned a value but never used.","'Button' is defined but never used.","'SlideTransition' is defined but never used.","'GrowTransition' is defined but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]